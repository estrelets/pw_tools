
type = struct EQUIPMENT_ADDON {
    unsigned int id;
    namechar name[32];
    int num_params;
    int param1;
    int param2;
    int param3;
}

type = struct WEAPON_MAJOR_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct WEAPON_SUB_TYPE {
    unsigned int id;
    namechar name[32];
    char file_hitgfx[128];
    char file_hitsfx[128];
    float probability_fastest;
    float probability_fast;
    float probability_normal;
    float probability_slow;
    float probability_slowest;
    float attack_speed;
    float attack_short_range;
    unsigned int action_type;
}

type = struct WEAPON_ESSENCE {
    unsigned int id;
    unsigned int id_major_type;
    unsigned int id_sub_type;
    namechar name[32];
    unsigned int require_projectile;
    char file_model_right[128];
    char file_model_left[128];
    char file_matter[128];
    char file_icon[128];
    int require_strength;
    int require_agility;
    int require_energy;
    int require_tili;
    unsigned int character_combo_id;
    int require_level;
    int require_reputation;
    int level;
    int fixed_props;
    float probability_hide;
    int damage_low;
    int damage_high_min;
    int damage_high_max;
    int magic_damage_low;
    int magic_damage_high_min;
    int magic_damage_high_max;
    float attack_range;
    unsigned int short_range_mode;
    int durability_min;
    int durability_max;
    int levelup_addon;
    int material_need;
    int price;
    int shop_price;
    int repairfee;
    float drop_probability_socket0;
    float drop_probability_socket1;
    float drop_probability_socket2;
    float make_probability_socket0;
    float make_probability_socket1;
    float make_probability_socket2;
    float probability_addon_num0;
    float probability_addon_num1;
    float probability_addon_num2;
    float probability_addon_num3;
    float probability_addon_num4;
    float probability_addon_num5;
    float probability_unique;
    struct {
        unsigned int id_addon;
        float probability_addon;
    } addons[32];
    struct {
        unsigned int id_rand;
        float probability_rand;
    } rands[32];
    struct {
        unsigned int id_unique;
        float probability_unique;
    } uniques[16];
    struct {
        unsigned int id_hide;
        float probability_hide;
    } hides[16];
    int durability_drop_min;
    int durability_drop_max;
    int decompose_price;
    int decompose_time;
    unsigned int element_id;
    int element_num;
    unsigned int id_drop_after_damaged;
    int num_drop_after_damaged;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct ARMOR_MAJOR_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct ARMOR_SUB_TYPE {
    unsigned int id;
    namechar name[32];
    unsigned int equip_mask;
}

type = struct ARMOR_ESSENCE {
    unsigned int id;
    unsigned int id_major_type;
    unsigned int id_sub_type;
    namechar name[32];
    char realname[32];
    char file_matter[128];
    char file_icon[128];
    unsigned int equip_location;
    int level;
    int require_strength;
    int require_agility;
    int require_energy;
    int require_tili;
    unsigned int character_combo_id;
    int require_level;
    int require_reputation;
    int fixed_props;
    int defence_low;
    int defence_high;
    struct {
        int low;
        int high;
    } magic_defences[5];
    int mp_enhance_low;
    int mp_enhance_high;
    int hp_enhance_low;
    int hp_enhance_high;
    int armor_enhance_low;
    int armor_enhance_high;
    int durability_min;
    int durability_max;
    int levelup_addon;
    int material_need;
    int price;
    int shop_price;
    int repairfee;
    float drop_probability_socket0;
    float drop_probability_socket1;
    float drop_probability_socket2;
    float drop_probability_socket3;
    float drop_probability_socket4;
    float make_probability_socket0;
    float make_probability_socket1;
    float make_probability_socket2;
    float make_probability_socket3;
    float make_probability_socket4;
    float probability_addon_num0;
    float probability_addon_num1;
    float probability_addon_num2;
    float probability_addon_num3;
    float probability_addon_num4;
    struct {
        unsigned int id_addon;
        float probability_addon;
    } addons[32];
    struct {
        unsigned int id_rand;
        float probability_rand;
    } rands[32];
    int durability_drop_min;
    int durability_drop_max;
    int decompose_price;
    int decompose_time;
    unsigned int element_id;
    int element_num;
    unsigned int id_drop_after_damaged;
    int num_drop_after_damaged;
    unsigned int id_hair;
    unsigned int id_hair_texture;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
    unsigned int force_all_magic_defences;
}

type = struct DECORATION_MAJOR_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct DECORATION_SUB_TYPE {
    unsigned int id;
    namechar name[32];
    unsigned int equip_mask;
}

type = struct DECORATION_ESSENCE {
    unsigned int id;
    unsigned int id_major_type;
    unsigned int id_sub_type;
    namechar name[32];
    char file_model[128];
    char file_matter[128];
    char file_icon[128];
    int level;
    int require_strength;
    int require_agility;
    int require_energy;
    int require_tili;
    unsigned int character_combo_id;
    int require_level;
    int require_reputation;
    int fixed_props;
    int damage_low;
    int damage_high;
    int magic_damage_low;
    int magic_damage_high;
    int defence_low;
    int defence_high;
    struct {
        int low;
        int high;
    } magic_defences[5];
    int armor_enhance_low;
    int armor_enhance_high;
    int durability_min;
    int durability_max;
    int levelup_addon;
    int material_need;
    int price;
    int shop_price;
    int repairfee;
    float probability_addon_num0;
    float probability_addon_num1;
    float probability_addon_num2;
    float probability_addon_num3;
    float probability_addon_num4;
    struct {
        unsigned int id_addon;
        float probability_addon;
    } addons[32];
    struct {
        unsigned int id_rand;
        float probability_rand;
    } rands[32];
    int durability_drop_min;
    int durability_drop_max;
    int decompose_price;
    int decompose_time;
    unsigned int element_id;
    int element_num;
    unsigned int id_drop_after_damaged;
    int num_drop_after_damaged;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct MEDICINE_MAJOR_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct MEDICINE_SUB_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct MEDICINE_ESSENCE {
    unsigned int id;
    unsigned int id_major_type;
    unsigned int id_sub_type;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int require_level;
    int cool_time;
    int hp_add_total;
    int hp_add_time;
    int mp_add_total;
    int mp_add_time;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct MATERIAL_MAJOR_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct MATERIAL_SUB_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct MATERIAL_ESSENCE {
    unsigned int id;
    unsigned int id_major_type;
    unsigned int id_sub_type;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int price;
    int shop_price;
    int decompose_price;
    int decompose_time;
    unsigned int element_id;
    int element_num;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct DAMAGERUNE_SUB_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct DAMAGERUNE_ESSENCE {
    unsigned int id;
    unsigned int id_sub_type;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    unsigned int damage_type;
    int price;
    int shop_price;
    int require_weapon_level_min;
    int require_weapon_level_max;
    int damage_increased;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct ARMORRUNE_SUB_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct ARMORRUNE_ESSENCE {
    unsigned int id;
    unsigned int id_sub_type;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    char file_gfx[128];
    char file_sfx[128];
    unsigned int damage_type;
    int price;
    int shop_price;
    int require_player_level_min;
    int require_player_level_max;
    float damage_reduce_percent;
    int damage_reduce_time;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct SKILLTOME_SUB_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct SKILLTOME_ESSENCE {
    unsigned int id;
    unsigned int id_sub_type;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct FLYSWORD_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_model[128];
    char file_model2[128];
    char file_matter[128];
    char file_icon[128];
    int price;
    int shop_price;
    int level;
    int require_player_level_min;
    float speed_increase_min;
    float speed_increase_max;
    float speed_rush_increase_min;
    float speed_rush_increase_max;
    float time_max_min;
    float time_max_max;
    float time_increase_per_element;
    unsigned int fly_mode;
    unsigned int character_combo_id;
    unsigned int id_drop_after_damaged;
    int num_drop_after_damaged;
    int max_improve_level;
    struct {
        unsigned int require_item_num;
        float speed_increase;
        float speed_rush_increase;
    } improve_config[10];
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct WINGMANWING_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_model[128];
    char file_matter[128];
    char file_icon[128];
    int price;
    int shop_price;
    int require_player_level_min;
    float speed_increase;
    int mp_launch;
    int mp_per_second;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct TOWNSCROLL_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    float use_time;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct UNIONSCROLL_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    float use_time;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct REVIVESCROLL_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    float use_time;
    int cool_time;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct ELEMENT_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int level;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct TASKMATTER_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_icon[128];
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct TOSSMATTER_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_model[128];
    char file_matter[128];
    char file_icon[128];
    char file_firegfx[128];
    char file_hitgfx[128];
    char file_hitsfx[128];
    int require_strength;
    int require_agility;
    int require_level;
    int damage_low;
    int damage_high_min;
    int damage_high_max;
    float use_time;
    float attack_range;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct PROJECTILE_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct PROJECTILE_ESSENCE {
    unsigned int id;
    unsigned int type;
    namechar name[32];
    char file_model[128];
    char file_matter[128];
    char file_icon[128];
    char file_firegfx[128];
    char file_hitgfx[128];
    char file_hitsfx[128];
    int require_weapon_level_min;
    int require_weapon_level_max;
    int damage_enhance;
    int damage_scale_enhance;
    int price;
    int shop_price;
    unsigned int id_addon0;
    unsigned int id_addon1;
    unsigned int id_addon2;
    unsigned int id_addon3;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct QUIVER_SUB_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct QUIVER_ESSENCE {
    unsigned int id;
    unsigned int id_sub_type;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    unsigned int id_projectile;
    int num_min;
    int num_max;
}

type = struct STONE_SUB_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct STONE_ESSENCE {
    unsigned int id;
    unsigned int id_sub_type;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int level;
    int color;
    int price;
    int shop_price;
    int install_price;
    int uninstall_price;
    unsigned int id_addon_damage;
    unsigned int id_addon_defence;
    namechar weapon_desc[16];
    namechar armor_desc[16];
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
    unsigned int combined_switch;
    unsigned int id_addon_decoration;
    namechar decoration_desc[16];
}

type = struct MONSTER_ADDON {
    unsigned int id;
    namechar name[32];
    int num_params;
    int param1;
    int param2;
    int param3;
}

type = struct MONSTER_TYPE {
    unsigned int id;
    namechar name[32];
    struct {
        unsigned int id_addon;
        float probability_addon;
    } addons[16];
}

type = struct MONSTER_ESSENCE {
    unsigned int id;
    unsigned int id_type;
    namechar name[32];
    namechar prop[16];
    namechar desc[16];
    unsigned int faction;
    unsigned int monster_faction;
    char file_model[128];
    char file_gfx_short[128];
    char file_gfx_short_hit[128];
    float size;
    float damage_delay;
    unsigned int id_strategy;
    unsigned int role_in_war;
    int level;
    int show_level;
    unsigned int id_pet_egg_captured;
    int life;
    int defence;
    int magic_defences[5];
    unsigned int immune_type;
    int exp;
    int skillpoint;
    int money_average;
    int money_var;
    unsigned int short_range_mode;
    int sight_range;
    int attack;
    int armor;
    int damage_min;
    int damage_max;
    struct {
        int damage_min;
        int damage_max;
    } magic_damages_ext[5];
    float attack_range;
    float attack_speed;
    int magic_damage_min;
    int magic_damage_max;
    unsigned int id_skill;
    int skill_level;
    int hp_regenerate;
    unsigned int aggressive_mode;
    unsigned int monster_faction_ask_help;
    unsigned int monster_faction_can_help;
    float aggro_range;
    float aggro_time;
    unsigned int inhabit_type;
    unsigned int patroll_mode;
    unsigned int stand_mode;
    float walk_speed;
    float run_speed;
    float fly_speed;
    float swim_speed;
    int attack_degree;
    int defend_degree;
    unsigned int common_strategy;
    struct {
        unsigned int id;
        float probability;
    } aggro_strategy[4];
    struct {
        unsigned int id_skill;
        int level;
        float probability;
    } skill_hp75[5];
    struct {
        unsigned int id_skill;
        int level;
        float probability;
    } skill_hp50[5];
    struct {
        unsigned int id_skill;
        int level;
        float probability;
    } skill_hp25[5];
    unsigned int after_death;
    struct {
        unsigned int id_skill;
        int level;
    } skills[32];
    float probability_drop_num0;
    float probability_drop_num1;
    float probability_drop_num2;
    float probability_drop_num3;
    int drop_times;
    int drop_protected;
    struct {
        unsigned int id;
        float probability;
    } drop_matters[32];
    unsigned int highest_frequency;
    int no_accept_player_buff;
    int invisible_lvl;
    int uninvisible_lvl;
    int no_auto_fight;
    int fixed_direction;
    unsigned int id_building;
    unsigned int combined_switch;
    int hp_adjust_common_value;
    int defence_adjust_common_value;
    int attack_adjust_common_value;
    float max_move_range;
    unsigned int drop_for_no_profit_time;
    int drop_mine_condition_flag;
    float drop_mine_probability;
    struct {
        unsigned int id;
        float probability;
        int life;
    } drop_mines[4];
    namechar label[16];
    unsigned int domain_related;
    int local_var[3];
}

type = struct NPC_TALK_SERVICE {
    unsigned int id;
    namechar name[32];
    unsigned int id_dialog;
}

type = struct NPC_SELL_SERVICE {
    unsigned int id;
    namechar name[32];
    struct {
        namechar page_title[8];
        int require_contrib;
        unsigned int require_force;
        int require_force_reputation;
        struct {
            unsigned int id;
        	int contrib_cost;
        	int force_contribution_cost;
        	int solo_tower_challenge_score_cost;
        } goods[32];
    } pages[8];
    unsigned int id_dialog;
}

type = struct NPC_BUY_SERVICE {
    unsigned int id;
    namechar name[32];
    unsigned int id_dialog;
}

type = struct NPC_REPAIR_SERVICE {
    unsigned int id;
    namechar name[32];
    unsigned int id_dialog;
}

type = struct NPC_INSTALL_SERVICE {
    unsigned int id;
    namechar name[32];
    unsigned int id_goods[32];
    unsigned int id_dialog;
}

type = struct NPC_UNINSTALL_SERVICE {
    unsigned int id;
    namechar name[32];
    unsigned int id_goods[32];
    unsigned int id_dialog;
}

type = struct NPC_TASK_IN_SERVICE {
    unsigned int id;
    namechar name[32];
    unsigned int id_tasks[256];
}

type = struct NPC_TASK_OUT_SERVICE {
    unsigned int id;
    namechar name[32];
    unsigned int storage_id;
    unsigned int storage_open_item;
    unsigned int storage_refresh_item;
    int storage_refresh_per_day;
    int storage_refresh_count_min;
    int storage_refresh_count_max;
    int storage_deliver_per_day;
    unsigned int id_tasks[256];
    unsigned int storage_refresh_on_crossserver;
}

type = struct NPC_TASK_MATTER_SERVICE {
    unsigned int id;
    namechar name[32];
    struct {
        unsigned int id_task;
        struct {
            unsigned int id_matter;
        	int num_matter;
        } taks_matters[4];
    } tasks[16];
}

type = struct NPC_SKILL_SERVICE {
    unsigned int id;
    namechar name[32];
    unsigned int id_skills[256];
    unsigned int id_dialog;
}

type = struct NPC_HEAL_SERVICE {
    unsigned int id;
    namechar name[32];
    unsigned int id_dialog;
}

type = struct NPC_TRANSMIT_SERVICE {
    unsigned int id;
    namechar name[32];
    int num_targets;
    struct {
        int idTarget;
        int fee;
        int required_level;
    } targets[32];
    unsigned int id_dialog;
}

type = struct NPC_TRANSPORT_SERVICE {
    unsigned int id;
    namechar name[32];
    struct {
        unsigned int id;
        unsigned int fee;
    } routes[32];
    unsigned int id_dialog;
}

Ctype = struct NPC_PROXY_SERVICE {
    unsigned int id;
    namechar name[32];
    unsigned int id_dialog;
}

type = struct NPC_STORAGE_SERVICE {
    unsigned int id;
    namechar name[32];
}

type = struct NPC_MAKE_SERVICE {
    unsigned int id;
    namechar name[32];
    unsigned int id_make_skill;
    int produce_type;
    struct {
        namechar page_title[8];
        unsigned int id_goods[32];
    } pages[8];
}

type = struct NPC_DECOMPOSE_SERVICE {
    unsigned int id;
    namechar name[32];
    unsigned int id_decompose_skill;
}

type = struct NPC_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct NPC_ESSENCE {
    unsigned int id;
    namechar name[32];
    unsigned int id_type;
    float refresh_time;
    unsigned int attack_rule;
    char file_model[128];
    float tax_rate;
    unsigned int id_src_monster;
    namechar hello_msg[256];
    unsigned int id_to_discover;
    unsigned int domain_related;
    unsigned int id_talk_service;
    unsigned int id_sell_service;
    unsigned int id_buy_service;
    unsigned int id_repair_service;
    unsigned int id_install_service;
    unsigned int id_uninstall_service;
    unsigned int id_task_out_service;
    unsigned int id_task_in_service;
    unsigned int id_task_matter_service;
    unsigned int id_skill_service;
    unsigned int id_heal_service;
    unsigned int id_transmit_service;
    unsigned int id_transport_service;
    unsigned int id_proxy_service;
    unsigned int id_storage_service;
    unsigned int id_make_service;
    unsigned int id_decompose_service;
    unsigned int id_identify_service;
    unsigned int id_war_towerbuild_service;
    unsigned int id_resetprop_service;
    unsigned int id_petname_service;
    unsigned int id_petlearnskill_service;
    unsigned int id_petforgetskill_service;
    unsigned int id_equipbind_service;
    unsigned int id_equipdestroy_service;
    unsigned int id_equipundestroy_service;
    unsigned int id_goblin_skill_service;
    unsigned int id_cross_server_service;
    unsigned int combined_services;
    unsigned int id_mine;
    unsigned int no_collision;
    unsigned int id_engrave_service;
    unsigned int id_randprop_service;
    unsigned int combined_services2;
    unsigned int id_force_service;
    unsigned int combined_switch;
}

type = struct talk_proc {
    namechar text[64];
    unsigned int id_talk;
    int num_window;
    talk_proc::window *windows;
  public:
    talk_proc(void);
    ~talk_proc(int);
    int save(FILE *);
    int load(FILE *);
} *

type = struct FACE_TEXTURE_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_base_tex[128];
    char file_high_tex[128];
    char file_icon[128];
    unsigned int tex_part_id;
    unsigned int character_combo_id;
    unsigned int gender_id;
    unsigned int visualize_id;
    unsigned int user_data;
    unsigned int facepill_only;
    unsigned int fashion_head_only;
}

type = struct FACE_SHAPE_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_shape[128];
    char file_icon[128];
    unsigned int shape_part_id;
    unsigned int character_combo_id;
    unsigned int gender_id;
    unsigned int visualize_id;
    unsigned int user_data;
    unsigned int facepill_only;
}

type = struct FACE_EMOTION_TYPE {
    unsigned int id;
    namechar name[32];
    char file_icon[128];
}

type = struct FACE_EXPRESSION_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_expression[128];
    char file_icon[128];
    unsigned int character_combo_id;
    unsigned int gender_id;
    unsigned int emotion_id;
}

type = struct FACE_HAIR_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_hair_skin[128];
    char file_hair_model[128];
    char file_icon[128];
    unsigned int character_combo_id;
    unsigned int gender_id;
    unsigned int visualize_id;
    unsigned int facepill_only;
    unsigned int fashion_head_only;
}

type = struct FACE_MOUSTACHE_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_moustache_skin[128];
    char file_icon[128];
    unsigned int character_combo_id;
    unsigned int gender_id;
    unsigned int visualize_id;
    unsigned int facepill_only;
}

type = struct COLORPICKER_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_colorpicker[128];
    unsigned int color_part_id;
    unsigned int character_combo_id;
    unsigned int gender_id;
}

type = struct CUSTOMIZEDATA_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_data[128];
    char file_icon[128];
    unsigned int character_combo_id;
    unsigned int gender_id;
}

type = struct RECIPE_MAJOR_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct RECIPE_SUB_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct RECIPE_ESSENCE {
    unsigned int id;
    unsigned int id_major_type;
    unsigned int id_sub_type;
    namechar name[32];
    int recipe_level;
    unsigned int id_skill;
    int skill_level;
    int bind_type;
    struct {
        unsigned int id_to_make;
        float probability;
    } targets[4];
    float fail_probability;
    int num_to_make;
    int price;
    float duration;
    int exp;
    int skillpoint;
    struct {
        unsigned int id;
        int num;
    } materials[32];
    unsigned int id_upgrade_equip;
    float upgrade_rate;
    unsigned int proc_type;
    unsigned int character_combo_id;
    float engrave_upgrade_rate;
    float addon_inherit_fee_rate;
}

type = struct ENEMY_FACTION_CONFIG {
    unsigned int id;
    namechar name[32];
    unsigned int enemy_factions[32];
}

type = struct CHARRACTER_CLASS_CONFIG {
    unsigned int id;
    namechar name[32];
    unsigned int character_class_id;
    unsigned int faction;
    unsigned int enemy_faction;
    float attack_speed;
    float attack_range;
    int hp_gen;
    int mp_gen;
    float walk_speed;
    float run_speed;
    float swim_speed;
    float fly_speed;
    int crit_rate;
    int vit_hp;
    int eng_mp;
    int agi_attack;
    int agi_armor;
    int lvlup_hp;
    int lvlup_mp;
    float lvlup_dmg;
    float lvlup_magic;
    float lvlup_defense;
    float lvlup_magicdefence;
    int angro_increase;
    float spirit_adjust[6];
    float poker_adjust[6];
}

type = struct PARAM_ADJUST_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        int level_diff;
        float adjust_exp;
        float adjust_sp;
        float adjust_money;
        float adjust_matter;
        float adjust_attack;
    } level_diff_adjust[16];
    struct {
        float adjust_exp;
        float adjust_sp;
    } team_adjust[11];
    struct {
        float adjust_exp;
        float adjust_sp;
    } team_profession_adjust[11];
    float dmg_adj_to_spec_atk_speed;
    float atk_rate_adj_to_spec_atk_speed;
    float use_monster_spirit_adjust[10];
}

type = struct PLAYER_ACTION_INFO_CONFIG {
    unsigned int id;
    namechar name[32];
    char action_name[32];
    char action_prefix[32];
    struct {
        char suffix[32];
    } action_weapon_suffix[15];
    unsigned int hide_weapon;
}

type = struct TASKDICE_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    struct {
        unsigned int id;
        float probability;
    } task_lists[20];
    unsigned int use_on_pick;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
    int no_use_in_combat;
}

type = struct TASKNORMALMATTER_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct FACE_FALING_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_faling_skin[128];
    char file_icon[128];
    unsigned int character_combo_id;
    unsigned int gender_id;
    unsigned int visualize_id;
    unsigned int facepill_only;
}

type = struct PLAYER_LEVELEXP_CONFIG {
    unsigned int id;
    namechar name[32];
    int exp[150];
}

type = struct MINE_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct MINE_ESSENCE {
    unsigned int id;
    unsigned int id_type;
    namechar name[32];
    unsigned int level;
    unsigned int level_required;
    unsigned int id_equipment_required;
    unsigned int eliminate_tool;
    unsigned int time_min;
    unsigned int time_max;
    int exp;
    int skillpoint;
    char file_model[128];
    struct {
        unsigned int id;
        float probability;
        int life;
    } materials[16];
    int num1;
    float probability1;
    int num2;
    float probability2;
    unsigned int task_in;
    unsigned int task_out;
    unsigned int uninterruptable;
    struct {
        unsigned int id_monster;
        int num;
        float radius;
        int life_time;
    } npcgen[4];
    struct {
        unsigned int monster_faction;
        float radius;
        int num;
    } aggros[1];
    unsigned int permenent;
    unsigned int combined_switch;
    int max_gatherer;
    int mine_type;
    float gather_dist;
    float material_gain_ratio;
    unsigned int gather_start_action_config;
    unsigned int gather_loop_action_config;
}

type = struct NPC_IDENTIFY_SERVICE {
    unsigned int id;
    namechar name[32];
    int fee;
}

type = struct FASHION_MAJOR_TYPE {
    unsigned int id;
    namechar name[32];
}

Etype = struct FASHION_SUB_TYPE {
    unsigned int id;
    namechar name[32];
    unsigned int equip_fashion_mask;
}

type = struct FASHION_ESSENCE {
    unsigned int id;
    unsigned int id_major_type;
    unsigned int id_sub_type;
    namechar name[32];
    char realname[32];
    char file_matter[128];
    char file_icon[128];
    unsigned int equip_location;
    int level;
    int require_level;
    int require_dye_count;
    int price;
    int shop_price;
    int gender;
    unsigned int id_hair;
    unsigned int id_hair_texture;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
    char wear_action[32];
    char file_model_right[128];
    char file_model_left[128];
    unsigned int character_combo_id;
    unsigned int action_type;
    unsigned int combined_switch;
    float h_min;
    float h_max;
    float s_min;
    float s_max;
    float v_min;
    float v_max;
}

type = struct FACETICKET_MAJOR_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct FACETICKET_SUB_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct FACETICKET_ESSENCE {
    unsigned int id;
    unsigned int id_major_type;
    unsigned int id_sub_type;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int require_level;
    char bound_file[128];
    unsigned int unsymmetrical;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct FACEPILL_MAJOR_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct FACEPILL_SUB_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct FACEPILL_ESSENCE {
    unsigned int id;
    unsigned int id_major_type;
    unsigned int id_sub_type;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int duration;
    float camera_scale;
    unsigned int character_combo_id;
    struct {
        char file[128];
    } pllfiles[24];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct SUITE_ESSENCE {
    unsigned int id;
    namechar name[32];
    int max_equips;
    struct {
        unsigned int id;
    } equipments[12];
    struct {
        unsigned int id;
    } addons[11];
    char file_gfx[128];
}

type = struct GM_GENERATOR_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct GM_GENERATOR_ESSENCE {
    unsigned int id;
    unsigned int id_type;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    unsigned int id_object;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct PET_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct PET_ESSENCE {
    unsigned int id;
    unsigned int id_type;
    namechar name[32];
    char file_model[128];
    char file_icon[128];
    unsigned int character_combo_id;
    int level_max;
    int level_require;
    unsigned int pet_snd_type;
    float hp_a;
    float hp_b;
    float hp_c;
    float hp_gen_a;
    float hp_gen_b;
    float hp_gen_c;
    float damage_a;
    float damage_b;
    float damage_c;
    float damage_d;
    float speed_a;
    float speed_b;
    float attack_a;
    float attack_b;
    float attack_c;
    float armor_a;
    float armor_b;
    float armor_c;
    float physic_defence_a;
    float physic_defence_b;
    float physic_defence_c;
    float physic_defence_d;
    float magic_defence_a;
    float magic_defence_b;
    float magic_defence_c;
    float magic_defence_d;
    float mp_a;
    float mp_gen_a;
    float attack_degree_a;
    float defence_degree_a;
    float size;
    float damage_delay;
    float attack_range;
    float attack_speed;
    int sight_range;
    unsigned int food_mask;
    unsigned int inhabit_type;
    unsigned int stand_mode;
    unsigned int plant_group;
    int group_limit;
    unsigned int immune_type;
    int player_gain_skill;
    int require_dye_count;
    unsigned int id_pet_egg_evolved;
    int cost_index;
    int hp_inherit_max_rate;
    int attack_inherit_max_rate;
    int defence_inherit_max_rate;
    int attack_level_inherit_max_rate;
    int defence_level_inherit_max_rate;
    int specific_skill;
    char file_gfx_short[128];
    unsigned int id_evolved_skill_rand;
    unsigned int combined_switch;
}

type = struct PET_EGG_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int id_pet;
    int money_hatched;
    int money_restored;
    int honor_point;
    int level;
    int exp;
    int skill_point;
    struct {
        int id_skill;
        int level;
    } skills[32];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct PET_FOOD_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int level;
    int hornor;
    int exp;
    int food_type;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct PET_FACETICKET_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct FIREWORKS_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    char file_fw[128];
    int level;
    int time_to_fire;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct FIREWORKS2_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int level;
    int time_to_fire;
    int price;
    int shop_price;
    int male_mine_id;
    int female_mine_id;
    char cast_action[32];
    namechar caster_word[256];
    namechar receiver_word[256];
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct FIX_POSITION_TRANSMIT_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int energy;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct WAR_TANKCALLIN_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct NPC_WAR_TOWERBUILD_SERVICE {
    unsigned int id;
    namechar name[32];
    struct {
        int id_in_build;
        int id_buildup;
        int id_object_need;
        int time_use;
        int fee;
    } build_info[4];
}

type = struct PLAYER_SECONDLEVEL_CONFIG {
    unsigned int id;
    namechar name[32];
    float exp_lost[256];
}

type = struct NPC_RESETPROP_SERVICE {
    unsigned int id;
    namechar name[32];
    struct {
        int id_object_need;
        int strength_delta;
        int agility_delta;
        int vital_delta;
        int energy_delta;
    } prop_entry[15];
}

type = struct NPC_PETNAME_SERVICE {
    unsigned int id;
    namechar name[32];
    int id_object_need;
    int price;
}

type = struct NPC_PETLEARNSKILL_SERVICE {
    unsigned int id;
    namechar name[32];
    unsigned int id_skills[128];
    unsigned int id_dialog;
}

type = struct NPC_PETFORGETSKILL_SERVICE {
    unsigned int id;
    namechar name[32];
    int id_object_need;
    int price;
}

type = struct SKILLMATTER_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int level_required;
    int id_skill;
    int level_skill;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct REFINE_TICKET_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    namechar desc[16];
    float ext_reserved_prob;
    float ext_succeed_prob;
    unsigned int fail_reserve_level;
    float fail_ext_succeed_prob[12];
    unsigned int binding_only;
    int require_level_max;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct DESTROYING_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct NPC_EQUIPBIND_SERVICE {
    unsigned int id;
    namechar name[32];
    int id_object_need[4];
    int price;
    unsigned int bind_type;
}

type = struct NPC_EQUIPDESTROY_SERVICE {
    unsigned int id;
    namechar name[32];
    int id_object_need;
    int price;
}

type = struct NPC_EQUIPUNDESTROY_SERVICE {
    unsigned int id;
    namechar name[32];
    int id_object_need;
    int price;
}

type = struct BIBLE_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    unsigned int id_addons[10];
    int price;
    int shop_price;
    unsigned int id_drop_after_damaged;
    int num_drop_after_damaged;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct SPEAKER_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int id_icon_set;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct AUTOMP_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int total_mp;
    float trigger_amount;
    int cool_time;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct AUTOHP_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int total_hp;
    float trigger_amount;
    int cool_time;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct DOUBLE_EXP_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int double_exp_time;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct TRANSMITSCROLL_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct DYE_TICKET_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    float h_min;
    float h_max;
    float s_min;
    float s_max;
    float v_min;
    float v_max;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
    unsigned int usage;
}

type = struct GOBLIN_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_model1[128];
    char file_model2[128];
    char file_model3[128];
    char file_model4[128];
    char file_matter[128];
    char file_icon1[128];
    char file_icon2[128];
    char file_icon3[128];
    char file_icon4[128];
    float exp_factor;
    int init_strength;
    int init_agility;
    int init_energy;
    int init_tili;
    int max_refine_lvl;
    int price;
    int shop_price;
    int default_skill1;
    int default_skill2;
    int default_skill3;
    struct {
        int rand_num;
        float rand_rate;
    } rand_prop[10];
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct GOBLIN_EQUIP_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct GOBLIN_EQUIP_ESSENCE {
    unsigned int id;
    unsigned int id_type;
    namechar name[32];
    char file_model[128];
    char file_icon[128];
    int equip_type;
    int req_goblin_level;
    int strength;
    int agility;
    int energy;
    int tili;
    int magic[5];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct GOBLIN_EXPPILL_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    unsigned int exp;
    int level;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct SELL_CERTIFICATE_ESSENCE {
    unsigned int id;
    namechar name[32];
    char show_model[128];
    char file_matter[128];
    char file_icon[128];
    unsigned int num_sell_item;
    unsigned int num_buy_item;
    unsigned int max_name_length;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
    char name_image[128];
}

type = struct TARGET_ITEM_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int num_use_pertime;
    int num_area;
    int area_id[10];
    unsigned int id_skill;
    int skill_level;
    int use_in_combat;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
    unsigned int use_in_sanctuary_only;
    unsigned int combined_switch;
    int target_id_for_pop[32];
    unsigned int target_faction;
    int require_level;
}

type = struct LOOK_INFO_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct UPGRADE_PRODUCTION_CONFIG {
    unsigned int id;
    namechar name[32];
    int num_refine[12];
    int num_weapon[2][20];
    int num_armor[4][20];
    int num_stone[20];
    int num_engrave[3];
    int num_addon[5];
    int num_decoration[4][20];
}

type = struct ACC_STORAGE_BLACKLIST_CONFIG {
    unsigned int id;
    namechar name[32];
    unsigned int blacklist[512];
}

type = struct FACE_HAIR_TEXTURE_MAP {
    unsigned int id;
    namechar name[32];
    struct {
        int model_id;
        int texture_id;
    } hair_texture_map[128];
}

type = struct MULTI_EXP_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        int multi_time;
        float rate;
        int item_count;
        int demulti_wait_time;
        int demulti_time;
    } choice[20];
}

type = struct INC_SKILL_ABILITY_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int id_skill;
    int level_required;
    float inc_ratio;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct GOD_EVIL_CONVERT_CONFIG {
    unsigned int id;
    namechar name[32];
    int skill_map[128][2];
}

type = struct WEDDING_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        int start_hour;
        int start_min;
        int end_hour;
        int end_min;
    } wedding_session[10];
    struct {
        int year;
        int month;
        int day;
    } reserved_day[20];
    struct {
        namechar name[16];
        float pos[3];
    } wedding_scene[10];
}

type = struct WEDDING_BOOKCARD_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int year;
    int month;
    int day;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct WEDDING_INVITECARD_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct SHARPENER_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int level;
    unsigned int equip_mask;
    int addon[3];
    int addon_time;
    int gfx_index;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct FACE_THIRDEYE_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_gfx[128];
    char file_icon[128];
    unsigned int character_combo_id;
    unsigned int gender_id;
    unsigned int facepill_only;
}

type = struct FACTION_FORTRESS_CONFIG {
    unsigned int id;
    namechar name[32];
    int require_level;
    struct {
        int id;
        int count;
    } require_item[8];
    struct {
        int exp;
        int tech_point;
    } level[50];
    int tech_point_cost[5][7];
    int init_building[20];
    int controller_id[100];
    struct {
        int id;
        int value;
    } common_value[100];
}

type = struct FACTION_BUILDING_SUB_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct FACTION_BUILDING_ESSENCE {
    unsigned int id;
    unsigned int id_sub_type;
    namechar name[32];
    char file_icon[128];
    int level;
    int require_level;
    int technology[5];
    int money;
    int material[8];
    int base_time;
    int delta_time;
    int controller_id0;
    int controller_id1;
}

type = struct FACTION_MATERIAL_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int material_count[8];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct CONGREGATE_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    unsigned int congregate_type;
    struct {
        int id;
        int require_level;
        int require_reply_level;
        int require_reply_level2;
        int require_reply_reincarnation_times;
    } area[8];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct ENGRAVE_MAJOR_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct ENGRAVE_SUB_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct ENGRAVE_ESSENCE {
    unsigned int id;
    unsigned int id_major_type;
    unsigned int id_sub_type;
    namechar name[32];
    char file_icon[128];
    int level;
    unsigned int equip_mask;
    int require_level_min;
    int require_level_max;
    int duration;
    struct {
        unsigned int id;
        int num;
    } materials[8];
    float probability_addon_num[4];
    struct {
        unsigned int id;
        float probability;
    } addons[32];
}

type = struct NPC_ENGRAVE_SERVICE {
    unsigned int id;
    namechar name[32];
    unsigned int id_engrave[16];
}

type = struct NPC_RANDPROP_SERVICE {
    unsigned int id;
    namechar name[32];
    struct {
        namechar page_title[8];
        unsigned int id_recipe;
    } pages[8];
}

type = struct RANDPROP_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct RANDPROP_ESSENCE {
    unsigned int id;
    unsigned int id_type;
    namechar name[32];
    unsigned int id_skill;
    int skill_level;
    int money;
    int duration;
    unsigned int equip_id[32];
    struct {
        unsigned int id;
        int num;
    } materials[8];
}

type = struct WIKI_TABOO_CONFIG {
    unsigned int id;
    namechar name[32];
    unsigned int essence[512];
    unsigned int recipe[128];
    unsigned int task[512];
    unsigned int skill[128];
}

type = struct FORCE_CONFIG {
    unsigned int id;
    namechar name[32];
    char file_icon[128];
    unsigned long color;
    namechar desc[256];
    int reputation_max;
    int contribution_max;
    int join_money_cost;
    int join_item_cost;
    int quit_repution_cost;
    int quit_contribution_cost;
}

type = struct FORCE_TOKEN_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    unsigned int require_force;
    int reputation_add;
    int reputation_increase_ratio;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct NPC_FORCE_SERVICE {
    unsigned int id;
    namechar name[32];
    unsigned int force_id;
}

type = struct PLAYER_DEATH_DROP_CONFIG {
    unsigned int id;
    namechar name[32];
    unsigned int itemlist[256];
}

type = struct DYNSKILLEQUIP_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int id_skill[4];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct CONSUME_POINTS_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        unsigned int id;
        int point;
    } list[1024];
}

type = struct ONLINE_AWARDS_CONFIG {
    unsigned int id;
    namechar name[32];
    int max_time;
    struct {
        int time;
        int interval;
        unsigned int ids[8];
        int exp[150];
    } choice[4];
}

type = struct COUNTRY_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        namechar name[32];
        char file_icon[128];
        unsigned long color;
    } country[4];
    int flag_controller_id[3];
    unsigned int flag_mine_id;
    float attack_flag_goal[3];
    float attack_flag_goal_radius;
    float defence_flag_goal[3];
    float defence_flag_goal_radius;
    struct {
        int controller_id;
        unsigned int id;
        int group;
    } attack_tower[9];
    struct {
        int controller_id;
        unsigned int id;
        int group;
    } defence_tower[9];
    COUNTRY_CONFIG::StrongHold stronghold[8];
}

type = struct GM_ACTIVITY_CONFIG {
    unsigned int id;
    namechar name[32];
    int openlist[8];
    int closelist[8];
    unsigned int disabled;
}

type = struct FASHION_WEAPON_CONFIG {
    unsigned int id;
    namechar name[32];
    unsigned int action_mask[15];
}

type = struct PET_EVOLVE_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        int num_evolve[3][2];
        int num_inherit[3][2];
        int num_rand_skill[3][2];
    } cost[5];
}

type = struct PET_EVOLVED_SKILL_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        int id;
        int level;
    } skills[2];
}

type = struct MONEY_CONVERTIBLE_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct STONE_CHANGE_RECIPE_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct STONE_CHANGE_RECIPE {
    unsigned int id;
    unsigned int id_type;
    namechar name[32];
    unsigned int id_old_stone;
    unsigned int id_new_stone;
    int money;
    struct {
        unsigned int id;
        int num;
    } materials[8];
}

type = struct MERIDIAN_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        int hp;
        int phy_damage;
        int magic_damage;
        int phy_defence;
        int magic_defence;
    } prof_para[12];
}

type = struct PET_EVOLVED_SKILL_RAND_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        float probability;
        unsigned int list[30];
    } rand_skill_group[3];
}

type = struct AUTOTASK_DISPLAY_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        int task_id;
        char file_icon[128];
        char file_gfx[128];
        unsigned long color;
    } list[16];
}

type = struct TOUCH_SHOP_CONFIG {
    unsigned int id;
    namechar name[32];
    TOUCH_SHOP_CONFIG::Page page[8];
}

type = struct TITLE_CONFIG {
    unsigned int id;
    namechar name[32];
    namechar desc[256];
    namechar condition[256];
    unsigned long color;
    unsigned int after_name;
    int phy_damage;
    int magic_damage;
    int phy_defence;
    int magic_defence;
    int attack;
    int armor;
    unsigned int broadcast;
}

type = struct COMPLEX_TITLE_CONFIG : public TITLE_CONFIG {
    unsigned int sub_titles[9];
}

type = struct MONSTER_SPIRIT_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int type;
    int level;
    int power;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct PLAYER_SPIRIT_CONFIG {
    unsigned int id;
    namechar name[32];
    int type;
    int hp;
    int damage;
    int magic_damage;
    int defence;
    int magic_defence[5];
    int vigour;
    struct {
        int require_level;
        int require_power;
        float gain_ratio;
    } list[10];
}

type = struct PLAYER_REINCARNATION_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        int require_item;
        float exp_premote;
    } level[10];
}

type = struct HISTORY_STAGE_CONFIG {
    unsigned int id;
    namechar name[32];
    namechar desc[256];
    int progress_value_id;
    int progress_value_goal;
}

type = struct HISTORY_ADVANCE_CONFIG {
    unsigned int id;
    namechar name[32];
    int history_stage_id[32];
}

type = struct AUTOTEAM_CONFIG {
    unsigned int id;
    namechar name[32];
    char file_icon[128];
    namechar desc[256];
    unsigned int type;
    int require_level[2];
    int require_maxlevel[2];
    int require_gender;
    int require_num[2];
    int num_prof[12];
    int require_level2;
    int require_reincarnation_times[2];
    int require_realm_level[2];
    int require_soul_power;
    int worldtag;
    float trans_pos[3];
    int worldtag_from[32];
    unsigned int combined_switch;
    int time_type;
    unsigned int week;
    int day[2][3];
    int daytime[4];
    int award[3];
    unsigned int task[32];
}

type = struct PLAYER_REALM_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        LEVEL level[10];
    } list[10];
}

type = struct CHARIOT_CONFIG {
    unsigned int id;
    namechar name[32];
    char file_icon[128];
    namechar desc[256];
    int level;
    int shape;
    int hp;
    float hp_inc_ratio;
    int defence;
    int magic_defences[5];
    int damage;
    int magic_damage;
    float speed;
    int skill[4];
    int pre_chariot;
    int upgrade_cost;
}

type = struct CHARIOT_WAR_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        unsigned int id;
        int power;
    } mines[3];
}

type = struct POKER_LEVELEXP_CONFIG {
    unsigned int id;
    namechar name[32];
    int exp[100];
    float exp_adjust[5];
}

type = struct POKER_SUITE_ESSENCE {
    unsigned int id;
    namechar name[32];
    float promote_ratio;
    unsigned int list[6];
}

type = struct POKER_DICE_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int swallow_exp;
    struct {
        unsigned int id;
        float probability;
    } list[256];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct POKER_SUB_TYPE {
    unsigned int id;
    namechar name[32];
    int type;
    union {
        UINT64 equip_mask;
    };
}

type = struct POKER_ESSENCE {
    unsigned int id;
    unsigned int id_sub_type;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    char file_img[128];
    char file_gfx[128];
    int require_level;
    int require_control_point[2];
    int rank;
    int max_level;
    int hp;
    int damage;
    int magic_damage;
    int defence;
    int magic_defence[5];
    int vigour;
    int inc_hp;
    int inc_damage;
    int inc_magic_damage;
    int inc_defence;
    int inc_magic_defence[5];
    int inc_vigour;
    int swallow_exp;
    int addon[4];
    int show_order;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct TOKEN_SHOP_CONFIG {
    unsigned int id;
    namechar name[32];
    unsigned int item[64];
}

type = struct SHOP_TOKEN_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    unsigned int id_token_shop;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct GT_CONFIG {
    unsigned int id;
    namechar name[32];
    int inc_attack_degree;
    int inc_defend_degree;
}

type = struct RAND_SHOP_CONFIG {
    unsigned int id;
    namechar name[32];
    int first_buy_price;
    int first_buy_range;
    int price;
    struct {
        unsigned int id;
        float probability;
    } list[256];
}

type = struct PROFIT_TIME_CONFIG {
    unsigned int id;
    namechar name[32];
    int upper_limit;
}

type = struct FACTION_PVP_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        int domain_count;
        int minebase_gen_count;
        int points_per_gen_minecar;
        int base_points;
        int minecar_count_can_rob;
        int minebase_count_can_rob;
    } list[8];
    int controller_id[52];
}

type = struct UNIVERSAL_TOKEN_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    unsigned int combined_switch;
    int config_id[32];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct TASK_LIST_CONFIG {
    unsigned int id;
    namechar name[32];
    unsigned int id_tasks[256];
}

type = struct TASK_DICE_BY_WEIGHT_CONFIG {
    unsigned int id;
    namechar name[32];
    unsigned int storage_id;
    int max_weight;
    struct {
        float probability;
        int weight;
        unsigned int task_list_config_id;
    } uniform_weight_list[10];
    unsigned int other_task_list_config_id;
    unsigned int storage_refresh_on_crossserver;
}

type = struct FASHION_SUITE_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_icon[128];
    unsigned int list[6];
    int show_order;
}

type = struct FASHION_BEST_COLOR_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        unsigned int id;
        unsigned long color;
    } list[64];
}

type = struct SIGN_AWARD_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        unsigned int id;
        int num;
    } list[31];
}

type = struct ASTROLABE_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    unsigned int character_combo_id;
    int require_level;
    int min_inner_point_value;
    int max_inner_point_value;
    int max_init_inner_point_value;
    int init_all_inner_point_value;
    int max_all_inner_point_value;
    struct {
        unsigned int id_rand;
        float probability_rand;
        int max_appear_times_rand;
    } rands[32];
    unsigned int id_rand_when_fail;
    int base_swallow_exp;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct ASTROLABE_RANDOM_ADDON_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int addon_random_exp_gained;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct ASTROLABE_INC_INNER_POINT_VALUE_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int increase_base;
    float increase_probability[10];
    int require_min_all_inner_point_value;
    int require_max_all_inner_point_value;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct ASTROLABE_INC_EXP_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int swallow_exp;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct ITEM_PACKAGE_BY_PROFESSION_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    struct {
        struct {
            unsigned int item_id;
        } gender_list[2];
    } prof_list[12];
    int item_expire_timelength;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct ASTROLABE_LEVELEXP_CONFIG {
    unsigned int id;
    namechar name[32];
    int exp[100];
}

type = struct ASTROLABE_ADDON_RANDOM_CONFIG {
    unsigned int id;
    namechar name[32];
    int levelup_exp[10];
    float rand_probability[10][10];
}

type = struct ASTROLABE_APPEARANCE_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        unsigned long name_color;
        char file_gfx[128];
    } list[10];
}

type = struct EQUIP_MAKE_HOLE_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        struct {
            unsigned int require_item_id;
        	int require_item_count;
        	int fee;
        } hole_list[4];
    } level_list[20];
}

type = struct SOLO_TOWER_CHALLENGE_LEVEL_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        float trans_pos[3];
        int controller_id_to_activate[8];
    } room[6];
    int controller_id_to_deactivate[256];
    struct {
        unsigned int playing_method_controller[32];
        int playing_method_boss_controller;
    } steps[12];
}

type = struct SOLO_TOWER_CHALLENGE_AWARD_PAGE_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        unsigned int id;
        unsigned int count;
        float probability;
    } list[20];
}

type = struct SOLO_TOWER_CHALLENGE_AWARD_LIST_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        unsigned int award_page_config_id;
        unsigned int draw_award_times;
        int award_score;
    } level[108];
}

type = struct SOLO_TOWER_CHALLENGE_SCORE_COST_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        unsigned int score_cost;
        unsigned int cooldown_id;
        unsigned int cooldown_time;
        float param[5];
        namechar param_comment[256];
    } score_buff_list[16];
}

type = struct MNFACTION_WAR_CONFIG {
    unsigned int id;
    namechar name[32];
    unsigned int sign_up_money_cost;
    int resource_point;
    int resource_tower_destroy_reduce_point;
    int attacker_boss_tid;
    int defender_boss_tid;
    int attacker_small_boss_tid;
    int defender_small_boss_tid;
    int small_boss_death_reduce_point;
    int attacker_small_boss_controller_id;
    int defender_small_boss_controller_id;
    int small_boss_appear_time;
    int debuff_appear_time;
    int debuff_init_ratio;
    int debuff_enhance_ratio_per_minute;
    struct {
        int controller_id[3];
        int guard_controller_id;
        unsigned int matter_id;
    } attacker_resource_tower[4];
    struct {
        int controller_id[3];
        int guard_controller_id;
        unsigned int matter_id;
    } defender_resource_tower[4];
    struct {
        int controller_id[5];
        unsigned int matter_id;
    } neutral_tower[4];
    struct {
        float attacker_incoming_pos[3];
        float defender_incoming_pos[3];
        float attacker_transmit_pos[3];
        float defender_transmit_pos[3];
        struct {
            float resurrect_pos[3];
        } resurrect_pos[2];
        float resurrect_pos_range;
        float resource_point_range;
        struct {
            float resourse_point_pos[3];
        } resourse_point_pos[2];
        struct {
            int controller_id[5];
            int matter_id;
            float transmit_pos[3];
        } transmit_pos[5];
        int degree_total;
        int degree_per_person_second;
        int gain_resource_point_per_second;
        int gain_resource_point_interval;
        int reduce_resource_point_on_death;
    } domain;
}

type = struct NPC_CROSS_SERVER_SERVICE {
    unsigned int id;
    namechar name[32];
    int activity_type;
    int player_count_limit;
    int time_out;
    int need_item_tid;
    int need_item_count;
    unsigned int cost_item;
    int history_max_level_require;
    int taoist_rank_require;
    int realm_level_require;
}

type = struct HOME_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        unsigned int need_exp;
        unsigned int need_history_max_level;
        unsigned int need_reincarnation_times;
        unsigned int need_realmlevel;
    } upgrade[32];
    struct {
        unsigned int energy;
        unsigned int prosperous;
        unsigned int clean;
        unsigned int max_grain_capacity;
        unsigned int max_resource_capacity;
    } level[32];
    struct {
        unsigned int home_level;
        unsigned int need_item_id;
        unsigned int need_item_count;
    } map_unlock[16];
}

type = struct HOME_PRODUCTS_CONFIG {
    unsigned int id;
    namechar name[32];
    int produce_type;
    char file_icon[128];
    int is_have_surface_display;
    int time;
    int building_level_min;
    int building_level_max;
    char file_matter_primary[128];
    char file_matter_grow_up[128];
    char file_matter_ripe[128];
    unsigned int output;
    unsigned int exp;
    int cost_grain_count;
    int cost_item_id;
    int cost_item_count;
    int sub_type;
}

type = struct HOME_RESOURCE_PRODUCE_CONFIG {
    unsigned int id;
    namechar name[32];
    int produce_type;
    float prosperous_effect_ratio;
    struct {
        unsigned int max_capacity;
        unsigned int max_add_energy_time;
        float produce_multiple;
        unsigned int upgrade_need_home_level;
        unsigned int upgrade_consume_stone_num;
        unsigned int upgrade_consume_wood_num;
        unsigned int upgrade_consume_iron_num;
        unsigned int upgrade_consume_cloth_num;
        unsigned int upgrade_consume_grain_num;
        unsigned int upgrade_consume_money;
    } level[16];
}

type = struct HOME_FORMULAS_PRODUCE_RECIPE {
    unsigned int id;
    unsigned int id_major_type;
    unsigned int id_sub_type;
    namechar name[32];
    int service_type;
    int is_base_formulas;
    int type;
    int level_need;
    unsigned int home_item_id;
    float success_probility;
    unsigned int count;
    unsigned int time_use;
    unsigned int energy_consume;
    unsigned int home_exp_gain;
    unsigned int produce_consume_stone_num;
    unsigned int produce_consume_wood_num;
    unsigned int produce_consume_iron_num;
    unsigned int produce_consume_cloth_num;
    unsigned int produce_consume_money;
    struct {
        unsigned int home_item_id;
        unsigned int normal_item_id;
        unsigned int item_count;
    } material[8];
}

type = struct HOME_FORMULAS_ITEM_ESSENCE {
    unsigned int id;
    unsigned int id_major_type;
    unsigned int id_sub_type;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    unsigned int formulas_id;
    unsigned int produce_times;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct HOME_PRODUCE_SERVICE_CONFIG {
    unsigned int id;
    namechar name[32];
    struct {
        unsigned int formulas_id;
        unsigned int level;
    } produce_list[128];
}

type = struct HOME_FACTORY_CONFIG {
    unsigned int id;
    namechar name[32];
    int factory_type;
    struct {
        unsigned int upgrade_consume_stone_num;
        unsigned int upgrade_consume_wood_num;
        unsigned int upgrade_consume_iron_num;
        unsigned int upgrade_consume_cloth_num;
        unsigned int upgrade_consume_grain_num;
        unsigned int upgrade_consume_money;
        unsigned int upgrade_need_home_level;
    } level[16];
}

type = struct HOME_ITEM_MAJOR_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct HOME_ITEM_SUB_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct HOME_ITEM_ENTITY {
    unsigned int id;
    unsigned int id_major_type;
    unsigned int id_sub_type;
    namechar name[32];
    int rank;
    namechar desc[256];
    char file_model[128];
    char file_icon[128];
    int min_general_prosperous;
    int max_general_prosperous;
    int min_fine_prosperous;
    int max_fine_prosperous;
    float fine_rand_probability;
    int clean;
    int max_placed_num;
    int is_permit_outside;
    int hang_type;
    int is_display;
    unsigned int factory_config;
    unsigned int resource_config;
    int show_priority;
    int forbid_equip;
}

type = struct HOME_FORMULAS_PRODUCE_MAJOR_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct HOME_FORMULAS_PRODUCE_SUB_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct HOME_FORMULAS_ITEM_MAJOR_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct HOME_FORMULAS_ITEM_SUB_TYPE {
    unsigned int id;
    namechar name[32];
}

type = struct HOME_STORAGE_TASK_CONFIG {
    unsigned int id;
    namechar name[32];
    unsigned int refresh_task_count_min;
    unsigned int refresh_task_count_max;
    unsigned int refresh_times;
    unsigned int refresh_cost_grain;
    unsigned int deliver_task_max;
    struct {
        unsigned int task_out_service_id;
        unsigned int flourish_min;
        unsigned int flourish_max;
        unsigned int random_weight;
    } task_storage[16];
}

type = struct WISH_TRIBUTE_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int unique_id;
    int value_add;
    int skill_id;
    int skill_level;
    int item_id;
    int item_count;
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}

type = struct RED_PACKET_PAPER_ESSENCE {
    unsigned int id;
    namechar name[32];
    char file_matter[128];
    char file_icon[128];
    int time_limit;
    int money_min;
    int money_max;
    int cash_min;
    int cash_max;
    int deliver_count_min;
    int deliver_count_max;
    int special_item_id;
    float special_item_count_rand[32];
    int price;
    int shop_price;
    int pile_num_max;
    unsigned int has_guid;
    unsigned int proc_type;
}
(gdb)

